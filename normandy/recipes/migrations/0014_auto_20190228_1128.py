# Generated by Django 2.0.13 on 2019-02-28 11:28

import json

from urllib.parse import urlparse

from django.db import migrations


def get_filename_from_url(url):
    return urlparse(url).path.split("/")[-1]


def add_extension_id(apps, schema_editor):
    Action = apps.get_model("recipes", "Action")
    RecipeRevision = apps.get_model("recipes", "RecipeRevision")
    Extension = apps.get_model("studies", "Extension")

    try:
        action = Action.objects.get(name="opt-out-study")
    except Action.DoesNotExist:
        return  # Do nothing since there cannot be any recipes using the opt-out-study action

    revisions = RecipeRevision.objects.filter(action_id=action.id)

    for revision in revisions:
        arguments = json.loads(revision.arguments_json)
        url = arguments.get("addonUrl")
        filename = get_filename_from_url(url)
        extension = Extension.objects.get(xpi=f"extensions/{filename}")
        arguments["extensionApiId"] = extension.id
        revision.arguments_json = json.dumps(arguments)
        revision.save()


def remove_extension_id(apps, schema_editor):
    Action = apps.get_model("recipes", "Action")
    RecipeRevision = apps.get_model("recipes", "RecipeRevision")

    try:
        action = Action.objects.get(name="opt-out-study")
    except Action.DoesNotExist:
        return  # Do nothing since there cannot be any recipes using the opt-out-study action

    revisions = RecipeRevision.objects.filter(action_id=action.id)

    for revision in revisions:
        arguments = json.loads(revision.arguments_json)
        if "extensionApiId" in arguments:
            arguments.pop("extensionApiId")
        revision.arguments_json = json.dumps(arguments)
        revision.save()


class Migration(migrations.Migration):

    dependencies = [
        ("recipes", "0013_auto_20181018_2049"),
        ("studies", "0006_extension_hash_algorithm"),
    ]

    operations = [migrations.RunPython(add_extension_id, remove_extension_id)]
