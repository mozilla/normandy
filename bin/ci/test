#!/usr/bin/env bash
set -eu

echo "Running Python tests"
junit_path=$ARTIFACTS_PATH/test_results/pytest
mkdir -p $junit_path
bin/ci/docker-run.sh py.test -vv --junitxml=$junit_path/pytest.xml normandy/

echo "Running JS tests"
# Start Karma test server, and run JS tests in Firefox
(
  echo "* Waiting for Karma server to start"
  docker run --net host -e CHECK_PORT=9876 -e CHECK_HOST=localhost giorgos/takis
  echo "* Starting Firefox"
  firefox localhost:9876 --headless
) &
echo "* Starting Karma server"
bin/ci/docker-run.sh --user root -e NODE_ENV=production -p 9876:9876 node bin/ci/karma-ci.js
pkill firefox

echo "Running contract tests"
# Set up the app, run it, and run tests against it
echo "* Setting up server"
createdb normandy
bin/ci/docker-run.sh -i -t ./manage.py migrate
bin/ci/docker-run.sh -i -t ./manage.py update_actions
bin/ci/docker-run.sh -i -t ./manage.py update_product_details
bin/ci/docker-run.sh -i -t ./manage.py initial_data
echo "* Starting server"
SERVER_ID=$(bin/ci/docker-run.sh -e DJANGO_CONFIGURATION=ProductionInsecure -d)

echo "* Waiting for server to be ready"
docker run --net host -e CHECK_PORT=8000 -e CHECK_HOST=localhost giorgos/takis
echo "* Running acceptance tests"
bin/ci/docker-run.sh py.test contract-tests/ \
  -vv \
  --server http://localhost:8000 \
  --junitxml=$ARTIFACTS_PATH/tests_results/pytest.xml
STATUS=$?

docker kill $SERVER_ID
exit $STATUS
