# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_USER
# DOCKER_PASS

version: 2.1

jobs:
  lint:
    docker:
      # Image with Python/Node and therapist pre-installed
      - image: mozilla/cidockerbases:therapist-latest
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS

    environment:
      # Use Test configuration so that development dependencies aren't needed
      DJANGO_CONFIGURATION: "Test"
      # Use an in-memory database so that the migrations check doesn't try to access a real database
      DATABASE_URL: "sqlite://:memory:"
      # Ignore warning and info checks about not applying migrations, and about missing geoip database
      DJANGO_SILENCED_SYSTEM_CHECKS: "dockerflow.health.W001,normandy.recipes.I00,normandy.recipes.I002,normandy.recipes.I003,normandy.recipes.E006"

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Create virtualenv
          command: |
            python3 -m venv ~/venv
            echo "source ~/venv/bin/activate" >> $BASH_ENV
      - run:
          name: Install Poetry
          command: pip install poetry==1.5.0
      - run:
          name: Install python dependencies
          command: poetry install --no-dev --no-interaction --verbose --no-ansi
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: Install node dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - "node_modules"
          key: v2-dependencies-{{ checksum "yarn.lock" }}
      - run:
          name: Lint
          command: therapist run --use-tracked-files

  docker-image-build:
    parameters:
      saveToWorkspace:
        type: boolean
        default: true
    docker:
      - image: mozilla/cidockerbases:docker-latest
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Create version.json
          command: |
            # store version info in app directory, for Docker to pick up
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
              "$CIRCLE_SHA1" \
              "${CIRCLE_TAG-}" \
              "$CIRCLE_PROJECT_USERNAME" \
              "$CIRCLE_PROJECT_REPONAME" \
              "$CIRCLE_BUILD_URL" \
              > version.json
      - run:
          name: Login to Dockerhub
          command: |
            if [ "${DOCKER_USER}" == "" ] || [ "${DOCKER_PASS}" == "" ]; then
              echo "Skipping Login to Dockerhub, credentials not available."
            else
              echo "${DOCKER_PASS}" | docker login -u="${DOCKER_USER}" --password-stdin
            fi
      - run:
          name: Build Docker image
          command: docker build -t normandy:web .
      - when:
          condition: << parameters.saveToWorkspace >>
          steps:
            - run:
                name: Save image into workspace
                command: |
                  mkdir -p workspace
                  docker save -o workspace/normandy-web.tar normandy:web
                  gzip workspace/normandy-web.tar
            - persist_to_workspace:
                root: workspace
                paths:
                  - normandy-web.tar.gz

  docker-image-publish:
    docker:
      - image: mozilla/cidockerbases:docker-latest
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - setup_remote_docker:
          version: 17.09.0-ce
      - attach_workspace:
          at: workspace
      - run:
          name: Load Docker image from workspace
          command: docker load -i workspace/normandy-web.tar.gz
      - run:
          name: Push to Dockerhub
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ./ci/deploy.sh latest
            fi
            if [ -n "${CIRCLE_TAG}" ]; then
              ./ci/deploy.sh "$CIRCLE_TAG"
            fi

  docs-build:
    docker:
      - image: cimg/python:3.9
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - run:
          name: Create virtualenv
          command: |
            python3 -m venv ~/venv
            echo "source ~/venv/bin/activate" >> $BASH_ENV
      - run:
          name: Install requirements
          command: poetry install --extras docs --no-interaction --verbose --no-ansi
      - run:
          name: Build docs
          command: |
            cd docs
            make html
      - persist_to_workspace:
          root: docs/_build
          paths: html
      - store_artifacts:
          path: docs/_build/html

  python-tests:
    docker:
      - image: cimg/python:3.9.12-node
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
      - image: cimg/postgres:9.6.24
        environment:
          POSTGRES_HOST_AUTH_METHOD: trust
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS

    environment:
      # Silence checks about missing geoip, and also the standard silenced warnings from settings.py
      DJANGO_SILENCED_SYSTEM_CHECKS: "normandy.recipes.E006,security.W001,security.W003"

    steps:
      - checkout
      - run:
          name: Create virtualenv
          command: |
            python3 -m venv ~/venv
            echo "source ~/venv/bin/activate" >> $BASH_ENV
      - run:
          name: Install python dependencies
          command: poetry install --no-dev --no-interaction --verbose --no-ansi
      - run:
          name: Install node dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Python tests
          command: |
            mkdir test-reports
            pytest normandy \
              --tb=short -vvv \
              --junitxml=test-reports/junit.xml
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports


workflows:
  version: 2
  main:
    jobs:
      # By default CircleCI does not run any jobs on tags. To allow a job to
      # run on a tag, we specify `filters.tags.only: /.*/`. That does not
      # affect whether or not the job will run on PRs or on untagged master
      # commits. By default all jobs listed run on all commits in PRs and on
      # master (unless otherwise filtered).

      # Group: Tests and lints
      - python-tests:
          filters:
            tags:
              only: /.*/
      - lint:
          filters:
            tags:
              only: /.*/

      # Group: Building artifacts
      - docs-build
      - docker-image-build:
          name: docker-image-build-save
          # A version of the job that save the docker image to the workspace
          saveToWorkspace: true
          filters:
            tags:
              only: /.*/
            branches:
              only: master
      - docker-image-build:
          name: docker-image-build-pr
          # A version of the job that does not save the image, as an optimization
          saveToWorkspace: false
          filters:
            branches:
              ignore: master

      # Group: Publish
      # All of these should only run on master and tags
      - docker-image-publish:
          requires:
            - python-tests
            - lint
            - docker-image-build-save
          filters:
            branches:
              only: master
            tags:
              only: /v.*/
