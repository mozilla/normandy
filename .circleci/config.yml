# These environment variables must be set in CircleCI UI
#
# DOCKERHUB_REPO - docker hub repo, format: <username>/<repo>
# DOCKER_USER
# DOCKER_PASS
#
version: 2
jobs:
  build_test_publish:
    docker:
      - image: mozilla/cidockerbases:docker-latest

    working_directory: ~/normandy

    environment:
      COMPOSE_FILE: ci/docker-compose.yml

    steps:
      - checkout

      - setup_remote_docker:
          version: 17.09.0-ce
          docker_layer_caching: true

      - run:
          name: Create version.json
          command: |
            # store version info in app directory, for Docker to pick up
            printf '{"commit":"%s","version":"%s","source":"https://github.com/%s/%s","build":"%s"}\n' \
              "$CIRCLE_SHA1" \
              "${CIRCLE_TAG-}" \
              "$CIRCLE_PROJECT_USERNAME" \
              "$CIRCLE_PROJECT_REPONAME" \
              "$CIRCLE_BUILD_URL" \
              > version.json

      - run:
          name: Starting artifact collector
          command: docker-compose run --user root artifact-collector
          background: true

      - run:
          name: Build and download Docker images
          # Build all local images, and pull all remote images, so that later
          # steps have everything they need already prepared. Note that "pull"
          # requires an explicit list so it doesn't try to pull images that
          # have already been built.
          command: |
            docker-compose build
            docker-compose pull db

      - run:
          name: Linting
          command: docker-compose run web lint

      - run:
          name: Python Tests
          command: docker-compose run web python-tests

      - run:
          name: Missing migrations
          command: docker-compose run web migrations-check

      - run:
          name: Contract tests
          command: |
            docker-compose up -d web
            docker-compose run web contracttest
            docker-compose kill web

      - run:
          name: JavaScript tests
          command: |
            docker-compose up -d js-tests-browser
            docker-compose up js-tests
            docker-compose kill js-tests-browser

      - run:
          name: Copy Artifacts
          when: always # run even if previous run commands failed
          command: |
            docker cp $(docker-compose ps -q artifact-collector):/artifacts /artifacts
            ls /artifacts

      - store_artifacts:
          path: /artifacts

      - store_test_results:
          path: /artifacts/test_results

      - run:
          name: Push to Dockerhub
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ./ci/deploy.sh latest
            fi
            if [ -n "${CIRCLE_TAG}" ]; then
              ./ci/deploy.sh "$CIRCLE_TAG"
            fi

  docs:
    docker:
      - image: circleci/python:3.7

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache python dependencies
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/docs.txt" }}

      - run:
          name: Create virtualenv
          command: |
            python3 -m venv ~/venv
            echo "source ~/venv/bin/activate" >> $BASH_ENV
      - run:
          name: Install requirements
          command: pip install -r requirements/docs.txt

      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/docs.txt" }}
          paths:
            - "~/venv"

      # Build the docs!
      - run:
          name: Build docs
          command: |
            cd docs
            make html

workflows:
  version: 2
  main:
    jobs:
      - build_test_publish:
          filters:
            tags:
              only: /.*/
      - docs
